<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ogoodo</groupId>
  <artifactId>HelloSpringMVC</artifactId>
  <packaging>war</packaging>


	<version>1.0-SNAPSHOT</version>
	<name>springmvcexample Maven Webapp</name>
	<url>http://maven.apache.org</url>
	
	<properties>
		<springframework.version>4.3.9.RELEASE</springframework.version>
		<com.fasterxml.jackson.core>2.6.3</com.fasterxml.jackson.core>
	</properties>

	<dependencies>
	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

        <!-- Servlet Library -->
        <!-- http://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <!-- jsp相关 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
			<scope>runtime</scope>
		</dependency>
 
		<!-- Spring MVC support -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<!-- ajax支持 -->
	  	<!-- jackson start -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>${com.fasterxml.jackson.core}</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>${com.fasterxml.jackson.core}</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		    <version>${com.fasterxml.jackson.core}</version>
		</dependency>
	  	<!-- jackson end -->

		<!-- 文件上传 -->
		<dependency>  
		    <groupId>commons-fileupload</groupId>  
		    <artifactId>commons-fileupload</artifactId>  
		    <version>1.3.1</version>  
		</dependency>
		
		<!-- log4j -->
		<!-- <dependency>  
		    <groupId>org.slf4j</groupId>  
		    <artifactId>slf4j-api</artifactId>  
		    <version>1.7.21</version>  
		</dependency>
		<dependency>  
		    <groupId>org.slf4j</groupId>  
		    <artifactId>slf4j-log4j12</artifactId>  
		    <version>1.7.21</version>  
		</dependency> -->
		
		<!-- logback begin -->
		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
		<!-- 
			http://www.cnblogs.com/quchunhui/p/5783172.html
			logback-core：是其它两个模块的基础模块。
			logback-classic：是log4j的一个 改良版本。此外logback-classic完整实现SLF4J API使你可以很方便地更换成其它日志系统如log4j或JDK14 Logging
		 	logback-access：访问模块与Servlet容器集成提供通过Http来访问日志的功能
		 -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>1.2.3</version>
		</dependency>
 		<!-- <dependency>
			  <groupId>ch.qos.logback</groupId>
			  <artifactId>logback-core</artifactId>
			  <version>1.2.3</version>
		</dependency>
 		<dependency>
			  <groupId>ch.qos.logback</groupId>
			  <artifactId>logback-access</artifactId>
			  <version>1.2.3</version>
		</dependency> -->
		<dependency>
	      <groupId>org.logback-extensions</groupId>  
	      <artifactId>logback-ext-spring</artifactId>  
	      <version>0.1.2</version>  
	      <scope>compile</scope>  
	    </dependency>
		<!-- logback end -->

		<!-- 注解表单验证 begin -->
		<!-- 
			JSR-303 风格校验
			JSR-303 是 java 官方推出的一套 Validation 接口。
			hibernate 给出了一个完整实现。
		 -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
	    <dependency>
	      <groupId>org.hibernate</groupId>
	      <artifactId>hibernate-validator-annotation-processor</artifactId>
	      <version>5.4.1.Final</version>
	    </dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.4.1.Final</version>
		</dependency>
		<!-- 注解表单验证 end -->

		<!-- mybatis-generator-gui begin -->
		<!-- 无此配置报错: The import javax.persistence cannot be resolved -->
		<dependency>
	        <groupId>org.hibernate.javax.persistence</groupId>
	        <artifactId>hibernate-jpa-2.0-api</artifactId>
	        <version>1.0.1.Final</version>
	    </dependency>
	    <!-- mybatis-generator-gui end -->

		<!-- mysql begin -->
        <!--mybatis依赖 -->  
        <dependency>  
            <groupId>org.mybatis</groupId>  
            <artifactId>mybatis</artifactId>  
            <version>3.2.3</version>  
        </dependency>  
  
        <!-- mybatis/spring包 -->  
        <dependency>  
            <groupId>org.mybatis</groupId>  
            <artifactId>mybatis-spring</artifactId>  
            <version>1.2.0</version>  
        </dependency>  

	  <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-jdbc</artifactId>
	    <version>${springframework.version}</version>
	  </dependency>
 
        <!-- mysql驱动包 -->  
        <dependency>  
            <groupId>mysql</groupId>  
            <artifactId>mysql-connector-java</artifactId>  
            <version>5.1.29</version>  
        </dependency> 
		<!-- mysql end -->
		
		<!-- redis begin -->
		<!-- 集成Redis -->
	    <dependency> 
	        <groupId>org.springframework.data</groupId> 
	        <artifactId>spring-data-redis</artifactId> 
	        <version>1.7.5.RELEASE</version> 
	    </dependency> 
	    <!-- Redis客户端 --> 
	    <dependency> 
	        <groupId>redis.clients</groupId> 
	        <artifactId>jedis</artifactId> 
	        <version>2.9.0</version> 
	    </dependency>
	    <!-- redis end -->
	    
	    <!-- shiro begin -->
		<dependency>
			<artifactId>quartz</artifactId>
			<groupId>org.opensymphony.quartz</groupId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-quartz</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>1.2.2</version>
		</dependency>
		<!-- shiro end -->
        
	</dependencies>
	
	
	
  <build>
    <finalName>HelloSpringMVC</finalName>
        <plugins>
	        <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-compiler-plugin</artifactId>
		        <version>3.1</version>
		        <configuration>
		            <source>1.8</source>
		            <target>1.8</target>
		            <!-- 参考: http://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#validator-annotationprocessor-usage -->
		            <!-- <annotationProcessorPaths>
                        <path>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-validator-annotation-processor</artifactId>
                            <version>5.4.1.Final</version>
                        </path>
                    </annotationProcessorPaths> -->
		        </configuration>
		    </plugin>
		    <!-- tomcat插件直接使用，就不要在下载tomcat服务器了 -->
		    <!-- 参考: http://feitianbenyue.iteye.com/blog/1669036
		    		run > run configurations > new maven build ( 选择workspace, tomcat7:run)  
		    		测试url: http://localhost:8080/api/hello  -->
		    <plugin>
		          <groupId>org.apache.tomcat.maven</groupId>
		          <artifactId>tomcat7-maven-plugin</artifactId>
		          <version>2.2</version>
		          <configuration>      
					    <hostName>localhost</hostName> 
					    <port>8080</port>
					    <path>/api</path> 
					    <uriEncoding>UTF-8</uriEncoding>
				  </configuration>
	        </plugin>
	    </plugins>
  </build>
</project>
